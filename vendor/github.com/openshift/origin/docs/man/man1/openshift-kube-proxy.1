.TH "OPENSHIFT KUBE" "1" " Openshift CLI User Manuals" "Openshift" "June 2016"  ""


.SH NAME
.PP
openshift kube proxy \- Run a proxy to the Kubernetes API server


.SH SYNOPSIS
.PP
\fBopenshift kube proxy\fP [OPTIONS]


.SH DESCRIPTION
.PP
To proxy all of the kubernetes api and nothing else, use:

.PP
kubectl proxy \-\-api\-prefix=/

.PP
To proxy only part of the kubernetes api and also some static files:

.PP
kubectl proxy \-\-www=/my/files \-\-www\-prefix=/static/ \-\-api\-prefix=/api/

.PP
The above lets you 'curl localhost:8001/api/v1/pods'.

.PP
To proxy the entire kubernetes api at a different root, use:

.PP
kubectl proxy \-\-api\-prefix=/custom/

.PP
The above lets you 'curl localhost:8001/custom/api/v1/pods'


.SH OPTIONS
.PP
\fB\-\-accept\-hosts\fP="^localhost$,^127\\.0\\.0\\.1$,^\\[::1\\]$"
    Regular expression for hosts that the proxy should accept.

.PP
\fB\-\-accept\-paths\fP="^/.*"
    Regular expression for paths that the proxy should accept.

.PP
\fB\-\-address\fP="127.0.0.1"
    The IP address on which to serve on.

.PP
\fB\-\-api\-prefix\fP="/"
    Prefix to serve the proxied API under.

.PP
\fB\-\-disable\-filter\fP=false
    If true, disable request filtering in the proxy. This is dangerous, and can leave you vulnerable to XSRF attacks, when used with an accessible port.

.PP
\fB\-p\fP, \fB\-\-port\fP=8001
    The port on which to run the proxy. Set to 0 to pick a random port.

.PP
\fB\-\-reject\-methods\fP="POST,PUT,PATCH"
    Regular expression for HTTP methods that the proxy should reject.

.PP
\fB\-\-reject\-paths\fP="^/api/.\fI/pods/.\fP/exec,^/api/.\fI/pods/.\fP/attach"
    Regular expression for paths that the proxy should reject.

.PP
\fB\-u\fP, \fB\-\-unix\-socket\fP=""
    Unix socket on which to run the proxy.

.PP
\fB\-w\fP, \fB\-\-www\fP=""
    Also serve static files from the given directory under the specified prefix.

.PP
\fB\-P\fP, \fB\-\-www\-prefix\fP="/static/"
    Prefix to serve static files under, if static file directory is specified.


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-allow\-verification\-with\-non\-compliant\-keys\fP=false
    Allow a SignatureVerifier to use keys which are technically non\-compliant with RFC6962.

.PP
\fB\-\-alsologtostderr\fP=false
    log to standard error as well as files

.PP
\fB\-\-api\-version\fP=""
    DEPRECATED: The API version to use when talking to the server

.PP
\fB\-\-application\-metrics\-count\-limit\fP=100
    Max number of application metrics to store (per container)

.PP
\fB\-\-as\fP=""
    Username to impersonate for the operation

.PP
\fB\-\-boot\-id\-file\fP="/proc/sys/kernel/random/boot\_id"
    Comma\-separated list of files to check for boot\-id. Use the first one that exists.

.PP
\fB\-\-certificate\-authority\fP=""
    Path to a cert. file for the certificate authority

.PP
\fB\-\-client\-certificate\fP=""
    Path to a client certificate file for TLS

.PP
\fB\-\-client\-key\fP=""
    Path to a client key file for TLS

.PP
\fB\-\-cluster\fP=""
    The name of the kubeconfig cluster to use

.PP
\fB\-\-config\fP=""
    Path to the config file to use for CLI requests.

.PP
\fB\-\-container\-hints\fP="/etc/cadvisor/container\_hints.json"
    location of the container hints file

.PP
\fB\-\-context\fP=""
    The name of the kubeconfig context to use

.PP
\fB\-\-docker\fP="unix:///var/run/docker.sock"
    docker endpoint

.PP
\fB\-\-docker\-env\-metadata\-whitelist\fP=""
    a comma\-separated list of environment variable keys that needs to be collected for docker containers

.PP
\fB\-\-docker\-only\fP=false
    Only report docker containers in addition to root stats

.PP
\fB\-\-docker\-root\fP="/var/lib/docker"
    DEPRECATED: docker root is read from docker info (this is a fallback, default: /var/lib/docker)

.PP
\fB\-\-enable\-load\-reader\fP=false
    Whether to enable cpu load reader

.PP
\fB\-\-event\-storage\-age\-limit\fP="default=0"
    Max length of time for which to store events (per type). Value is a comma separated list of key values, where the keys are event types (e.g.: creation, oom) or "default" and the value is a duration. Default is applied to all non\-specified event types

.PP
\fB\-\-event\-storage\-event\-limit\fP="default=0"
    Max number of events to store (per type). Value is a comma separated list of key values, where the keys are event types (e.g.: creation, oom) or "default" and the value is an integer. Default is applied to all non\-specified event types

.PP
\fB\-\-global\-housekeeping\-interval\fP=0
    Interval between global housekeepings

.PP
\fB\-\-google\-json\-key\fP=""
    The Google Cloud Platform Service Account JSON Key to use for authentication.

.PP
\fB\-\-housekeeping\-interval\fP=0
    Interval between container housekeepings

.PP
\fB\-\-httptest.serve\fP=""
    if non\-empty, httptest.NewServer serves on this address and blocks

.PP
\fB\-\-insecure\-skip\-tls\-verify\fP=false
    If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure

.PP
\fB\-\-ir\-data\-source\fP="influxdb"
    Data source used by InitialResources. Supported options: influxdb, gcm.

.PP
\fB\-\-ir\-dbname\fP="k8s"
    InfluxDB database name which contains metrics requred by InitialResources

.PP
\fB\-\-ir\-hawkular\fP=""
    Hawkular configuration URL

.PP
\fB\-\-ir\-influxdb\-host\fP="localhost:8080/api/v1/proxy/namespaces/kube\-system/services/monitoring\-influxdb:api"
    Address of InfluxDB which contains metrics requred by InitialResources

.PP
\fB\-\-ir\-namespace\-only\fP=false
    Whether the estimation should be made only based on data from the same namespace.

.PP
\fB\-\-ir\-password\fP="root"
    Password used for connecting to InfluxDB

.PP
\fB\-\-ir\-percentile\fP=90
    Which percentile of samples should InitialResources use when estimating resources. For experiment purposes.

.PP
\fB\-\-ir\-user\fP="root"
    User used for connecting to InfluxDB

.PP
\fB\-\-kubeconfig\fP=""
    Specify a kubeconfig file to define the configuration

.PP
\fB\-\-log\-backtrace\-at\fP=:0
    when logging hits line file:N, emit a stack trace

.PP
\fB\-\-log\-cadvisor\-usage\fP=false
    Whether to log the usage of the cAdvisor container

.PP
\fB\-\-log\-dir\fP=""
    If non\-empty, write log files in this directory

.PP
\fB\-\-log\-flush\-frequency\fP=0
    Maximum number of seconds between log flushes

.PP
\fB\-\-logtostderr\fP=true
    log to standard error instead of files

.PP
\fB\-\-machine\-id\-file\fP="/etc/machine\-id,/var/lib/dbus/machine\-id"
    Comma\-separated list of files to check for machine\-id. Use the first one that exists.

.PP
\fB\-\-match\-server\-version\fP=false
    Require server version to match client version

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
    If present, the namespace scope for this CLI request

.PP
\fB\-\-request\-timeout\fP="0"
    The length of time to wait before giving up on a single server request. Non\-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests.

.PP
\fB\-\-server\fP=""
    The address and port of the Kubernetes API server

.PP
\fB\-\-stderrthreshold\fP=2
    logs at or above this threshold go to stderr

.PP
\fB\-\-storage\-driver\-buffer\-duration\fP=0
    Writes in the storage driver will be buffered for this duration, and committed to the non memory backends as a single transaction

.PP
\fB\-\-storage\-driver\-db\fP="cadvisor"
    database name

.PP
\fB\-\-storage\-driver\-host\fP="localhost:8086"
    database host:port

.PP
\fB\-\-storage\-driver\-password\fP="root"
    database password

.PP
\fB\-\-storage\-driver\-secure\fP=false
    use secure connection with database

.PP
\fB\-\-storage\-driver\-table\fP="stats"
    table name

.PP
\fB\-\-storage\-driver\-user\fP="root"
    database username

.PP
\fB\-\-token\fP=""
    Bearer token for authentication to the API server

.PP
\fB\-\-user\fP=""
    The name of the kubeconfig user to use

.PP
\fB\-v\fP, \fB\-\-v\fP=0
    log level for V logs

.PP
\fB\-\-vmodule\fP=
    comma\-separated list of pattern=N settings for file\-filtered logging


.SH EXAMPLE
.PP
.RS

.nf

# Run a proxy to kubernetes apiserver on port 8011, serving static content from ./local/www/
kubectl proxy \-\-port=8011 \-\-www=./local/www/

# Run a proxy to kubernetes apiserver on an arbitrary local port.
# The chosen port for the server will be output to stdout.
kubectl proxy \-\-port=0

# Run a proxy to kubernetes apiserver, changing the api prefix to k8s\-api
# This makes e.g. the pods api available at localhost:8011/k8s\-api/v1/pods/
kubectl proxy \-\-api\-prefix=/k8s\-api

.fi
.RE


.SH SEE ALSO
.PP
\fBopenshift\-kube(1)\fP,


.SH HISTORY
.PP
June 2016, Ported from the Kubernetes man\-doc generator
