{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "jenkins-pipeline-example",
    "annotations": {
      "description": "This is used to test the jenkins pipeline strategy",
      "iconClass": "icon-jenkins"
    }
  },
  "objects": [
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "sample-pipeline",
        "labels": {
          "name": "sample-pipeline"
        },
        "annotations": {
          "pipeline.alpha.openshift.io/uses": "[{\"name\": \"frontend\", \"namespace\": \"\", \"kind\": \"DeploymentConfig\"}]"
        }
      },
      "spec": {
        "strategy": {
          "type": "JenkinsPipeline",
          "jenkinsPipelineStrategy": {
            "jenkinsfile": "node{\nstage 'build'\nopenshiftBuild(buildConfig: 'ruby-sample-build', showBuildLogs: 'true')\n}"
          }
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "origin-ruby-sample"
      },
      "spec": {},
      "status": {
        "dockerImageRepository": ""
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "ruby-sample-build",
        "labels": {
          "name": "ruby-sample-build"
        }
      },
      "spec": {
        "source": {
          "type": "Git",
          "git": {
            "uri": "https://github.com/openshift/ruby-hello-world.git"
          }
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "name": "ruby:2.2",
              "namespace": "openshift"
            }
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "origin-ruby-sample:latest"
          }
        },
        "resources": {}
      },
      "status": {
        "lastVersion": 0
      }
    }
  ],
  "parameters": [
  ],
  "labels": {
    "template": "jenkins-pipeline-test"
  }
}
